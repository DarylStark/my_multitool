[tool.poetry]
name = "ds-my-multitool"
version = "1.0.0"
description = "Multitools for the My project"
authors = ["Daryl Stark <daryl@dstark.nl>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "my_multitool", from = "src" }]

[tool.poetry.dependencies]
python = "^3.10"
ds-my-data = "1.0.1"
typer = "^0.9.0"
pydantic = "^1.10.0"
pyyaml = "^6.0.1"
rich = "^13.5.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pycodestyle = "^2.11.0"
pylint = "^2.17.5"
mypy = "^1.5.1"
flake8 = "^6.1.0"
pydocstyle = "^6.3.0"
darglint2 = "^1.8.2"
autopep8 = "^2.0.2"
bumpver = "^2023.1129"
toml = "^0.10.2"
types-pyyaml = "^6.0.12.11"

[tool.poetry.group.doc]
optional = true

[tool.poetry.group.doc.dependencies]
sphinx = "^6.2.1"
sphinx-rtd-theme = "^1.2.2"
sphinxcontrib-mermaid = "^0.9.2"

[tool.poetry.scripts]
my-multitool = 'my_multitool.__main__:main'

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.bumpver]
current_version = "1.0.0"
version_pattern = "MAJOR.MINOR.PATCH[-TAG]"
commit_message = "Version {new_version}"
commit = true
tag = false
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"', 'version = "{version}"']
"src/my_multitool/__init__.py" = ["{version}"]

[tool.pytest.ini_options]
pythonpath = ['./src/', './tests/']
